<?php

defined('BASEPATH') OR exit('No direct script access allowed');

// This can be removed if you use __autoload() in config.php OR use Modular Extensions
require APPPATH . '/libraries/REST_Controller.php';


class Jual extends REST_Controller {

    function __construct()
    {
        // Construct the parent class
        parent::__construct();
        $this->load->model('barang_model');
    }

    public function barang_get()
    {
        $data = $this->barang_model->data_barang();
        
        if (!is_null($data)) {
        	$this->set_response($data, REST_Controller::HTTP_OK); // OK (200) being the HTTP response code
        }else {
            $this->set_response([
                'status' => FALSE,
                'message' => 'Data Kosong gan..!!'
            ], REST_Controller::HTTP_NOT_FOUND); // NOT_FOUND (404) being the HTTP response code
        }
     
    }

    public function find_get()
    {
    	$id = $this->get('id');
    	
    	if ($id != NULL)
        {
        	if ($id <= 0)
	        {
	            // Invalid id, set the response and exit.
	            $this->response(NULL, REST_Controller::HTTP_BAD_REQUEST); // BAD_REQUEST (400) being the HTTP response code
	        }else{
	        	$data = $this->barang_model->find_barang($id);
	            // Check if the users data store contains users (in case the database result returns NULL)
	            if (!is_null($data))
	            {
	                // Set the response and exit
	                $this->response($data, REST_Controller::HTTP_OK); // OK (200) being the HTTP response code
	            }
	            else
	            {
	                // Set the response and exit
	                $this->response([
	                    'status' => FALSE,
	                    'message' => 'ID Kosong gan..!!'
	                ], REST_Controller::HTTP_NOT_FOUND); // NOT_FOUND (404) being the HTTP response code
	            }	        	
	        }

        }else {
                // Set the response and exit
                $this->response([
                    'status' => FALSE,
                    'message' => 'ID Kosong gan..!!'
                ], REST_Controller::HTTP_NOT_FOUND); // NOT_FOUND (404) being the HTTP response code
        }
     
    }

    public function barang_post()
    {
    	$data = array(
    		'nama_barang' => $this->post('nama_barang'), 
    		'kategori' => $this->post('kategori'), 
    		'stok' => $this->post('stok'), 
    		'harga_beli' => $this->post('harga_beli'), 
    		'harga_jual' => $this->post('harga_jual'), 
    	);

    	$id_input = $this->barang_model->input_barang($data);

        $message = [
            'id' => $id_input, // Automatically generated by the model
            'nama_barang' => $this->post('nama_barang'),
            'kategori' => $this->post('kategori'),
            'message' => 'Added a resource'
        ];

        $this->set_response($message, REST_Controller::HTTP_CREATED); // CREATED (201) being the HTTP response code
    }

    public function edit_barang_post()
    {
    	$id = $this->get('id');
    	$data = array(
    		'nama_barang' => $this->post('nama_barang'), 
    		'kategori' => $this->post('kategori'), 
    		'stok' => $this->post('stok'), 
    		'harga_beli' => $this->post('harga_beli'), 
    		'harga_jual' => $this->post('harga_jual'), 
    	);

    	$this->barang_model->edit_barang($data, $id);

        $message = [
            'id' => $id, // Automatically generated by the model
            'nama_barang' => $this->post('nama_barang'),
            'kategori' => $this->post('kategori'),
            'message' => 'Edit a resource'
        ];

        $this->set_response($message, REST_Controller::HTTP_CREATED); // CREATED (201) being the HTTP response code
    }

    public function barang_delete()
    {
    	$id = $this->get('id');

    	if ($id != NULL)
        {
        	if ($id <= 0)
	        {
	            $this->response(NULL, REST_Controller::HTTP_BAD_REQUEST); // BAD_REQUEST (400) being the HTTP response code
	        }else{
	        	$data = $this->barang_model->delete_barang($id);
	            if ($data == true)
	            {
	                $this->response($data, REST_Controller::HTTP_OK); // OK (200) being the HTTP response code
	            }
	            else
	            {
	                $this->response([
	                    'status' => FALSE,
	                    'message' => 'ID tidak ada gan..!!'
	                ], REST_Controller::HTTP_NOT_FOUND); // NOT_FOUND (404) being the HTTP response code
	            }	        	
	        }

        }else {
                $this->response([
                    'status' => FALSE,
                    'message' => 'ID tidak ada gan..!!'
                ], REST_Controller::HTTP_NOT_FOUND); // NOT_FOUND (404) being the HTTP response code
        }
     
    }


}
